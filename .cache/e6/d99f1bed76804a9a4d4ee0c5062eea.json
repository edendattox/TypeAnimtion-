{"id":"node_modules/three-bmfont-text/lib/utils.js","dependencies":[{"name":"E:\\three.js-stuff\\10 - typeanimation\\package.json","includedInParent":true,"mtime":1622607444721},{"name":"E:\\three.js-stuff\\10 - typeanimation\\node_modules\\three-bmfont-text\\package.json","includedInParent":true,"mtime":1622607444588}],"generated":{"js":"var itemSize = 2\nvar box = { min: [0, 0], max: [0, 0] }\n\nfunction bounds (positions) {\n  var count = positions.length / itemSize\n  box.min[0] = positions[0]\n  box.min[1] = positions[1]\n  box.max[0] = positions[0]\n  box.max[1] = positions[1]\n\n  for (var i = 0; i < count; i++) {\n    var x = positions[i * itemSize + 0]\n    var y = positions[i * itemSize + 1]\n    box.min[0] = Math.min(x, box.min[0])\n    box.min[1] = Math.min(y, box.min[1])\n    box.max[0] = Math.max(x, box.max[0])\n    box.max[1] = Math.max(y, box.max[1])\n  }\n}\n\nmodule.exports.computeBox = function (positions, output) {\n  bounds(positions)\n  output.min.set(box.min[0], box.min[1], 0)\n  output.max.set(box.max[0], box.max[1], 0)\n}\n\nmodule.exports.computeSphere = function (positions, output) {\n  bounds(positions)\n  var minX = box.min[0]\n  var minY = box.min[1]\n  var maxX = box.max[0]\n  var maxY = box.max[1]\n  var width = maxX - minX\n  var height = maxY - minY\n  var length = Math.sqrt(width * width + height * height)\n  output.center.set(minX + width / 2, minY + height / 2, 0)\n  output.radius = length / 2\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/three-bmfont-text/lib/utils.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/three-bmfont-text/lib/utils.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/three-bmfont-text/lib/utils.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/three-bmfont-text/lib/utils.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/three-bmfont-text/lib/utils.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/three-bmfont-text/lib/utils.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/three-bmfont-text/lib/utils.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/three-bmfont-text/lib/utils.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/three-bmfont-text/lib/utils.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/three-bmfont-text/lib/utils.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/three-bmfont-text/lib/utils.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/three-bmfont-text/lib/utils.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/three-bmfont-text/lib/utils.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/three-bmfont-text/lib/utils.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/three-bmfont-text/lib/utils.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/three-bmfont-text/lib/utils.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/three-bmfont-text/lib/utils.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/three-bmfont-text/lib/utils.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/three-bmfont-text/lib/utils.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/three-bmfont-text/lib/utils.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/three-bmfont-text/lib/utils.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/three-bmfont-text/lib/utils.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/three-bmfont-text/lib/utils.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/three-bmfont-text/lib/utils.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/three-bmfont-text/lib/utils.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/three-bmfont-text/lib/utils.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/three-bmfont-text/lib/utils.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/three-bmfont-text/lib/utils.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/three-bmfont-text/lib/utils.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/three-bmfont-text/lib/utils.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/three-bmfont-text/lib/utils.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/three-bmfont-text/lib/utils.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/three-bmfont-text/lib/utils.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/three-bmfont-text/lib/utils.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/three-bmfont-text/lib/utils.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/three-bmfont-text/lib/utils.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/three-bmfont-text/lib/utils.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/three-bmfont-text/lib/utils.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/three-bmfont-text/lib/utils.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}}],"sources":{"node_modules/three-bmfont-text/lib/utils.js":"var itemSize = 2\nvar box = { min: [0, 0], max: [0, 0] }\n\nfunction bounds (positions) {\n  var count = positions.length / itemSize\n  box.min[0] = positions[0]\n  box.min[1] = positions[1]\n  box.max[0] = positions[0]\n  box.max[1] = positions[1]\n\n  for (var i = 0; i < count; i++) {\n    var x = positions[i * itemSize + 0]\n    var y = positions[i * itemSize + 1]\n    box.min[0] = Math.min(x, box.min[0])\n    box.min[1] = Math.min(y, box.min[1])\n    box.max[0] = Math.max(x, box.max[0])\n    box.max[1] = Math.max(y, box.max[1])\n  }\n}\n\nmodule.exports.computeBox = function (positions, output) {\n  bounds(positions)\n  output.min.set(box.min[0], box.min[1], 0)\n  output.max.set(box.max[0], box.max[1], 0)\n}\n\nmodule.exports.computeSphere = function (positions, output) {\n  bounds(positions)\n  var minX = box.min[0]\n  var minY = box.min[1]\n  var maxX = box.max[0]\n  var maxY = box.max[1]\n  var width = maxX - minX\n  var height = maxY - minY\n  var length = Math.sqrt(width * width + height * height)\n  output.center.set(minX + width / 2, minY + height / 2, 0)\n  output.radius = length / 2\n}\n"},"lineCount":39}},"error":null,"hash":"295250ecdc5cd9ccf876852048f8d42e","cacheData":{"env":{}}}