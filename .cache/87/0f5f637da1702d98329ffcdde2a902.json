{"id":"node_modules/quad-indices/index.js","dependencies":[{"name":"E:\\three.js-stuff\\10 - typeanimation\\package.json","includedInParent":true,"mtime":1622607444721},{"name":"E:\\three.js-stuff\\10 - typeanimation\\node_modules\\quad-indices\\package.json","includedInParent":true,"mtime":1622607444254},{"name":"dtype","loc":{"line":1,"column":20},"parent":"E:\\three.js-stuff\\10 - typeanimation\\node_modules\\quad-indices\\index.js","resolved":"E:\\three.js-stuff\\10 - typeanimation\\node_modules\\dtype\\index.js"},{"name":"an-array","loc":{"line":2,"column":22},"parent":"E:\\three.js-stuff\\10 - typeanimation\\node_modules\\quad-indices\\index.js","resolved":"E:\\three.js-stuff\\10 - typeanimation\\node_modules\\an-array\\index.js"},{"name":"is-buffer","loc":{"line":3,"column":23},"parent":"E:\\three.js-stuff\\10 - typeanimation\\node_modules\\quad-indices\\index.js","resolved":"E:\\three.js-stuff\\10 - typeanimation\\node_modules\\is-buffer\\index.js"}],"generated":{"js":"var dtype = require('dtype')\nvar anArray = require('an-array')\nvar isBuffer = require('is-buffer')\n\nvar CW = [0, 2, 3]\nvar CCW = [2, 1, 3]\n\nmodule.exports = function createQuadElements(array, opt) {\n    //if user didn't specify an output array\n    if (!array || !(anArray(array) || isBuffer(array))) {\n        opt = array || {}\n        array = null\n    }\n\n    if (typeof opt === 'number') //backwards-compatible\n        opt = { count: opt }\n    else\n        opt = opt || {}\n\n    var type = typeof opt.type === 'string' ? opt.type : 'uint16'\n    var count = typeof opt.count === 'number' ? opt.count : 1\n    var start = (opt.start || 0) \n\n    var dir = opt.clockwise !== false ? CW : CCW,\n        a = dir[0], \n        b = dir[1],\n        c = dir[2]\n\n    var numIndices = count * 6\n\n    var indices = array || new (dtype(type))(numIndices)\n    for (var i = 0, j = 0; i < numIndices; i += 6, j += 4) {\n        var x = i + start\n        indices[x + 0] = j + 0\n        indices[x + 1] = j + 1\n        indices[x + 2] = j + 2\n        indices[x + 3] = j + a\n        indices[x + 4] = j + b\n        indices[x + 5] = j + c\n    }\n    return indices\n}"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/quad-indices/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/quad-indices/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/quad-indices/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/quad-indices/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/quad-indices/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/quad-indices/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/quad-indices/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/quad-indices/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/quad-indices/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/quad-indices/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/quad-indices/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/quad-indices/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/quad-indices/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/quad-indices/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/quad-indices/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/quad-indices/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/quad-indices/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/quad-indices/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/quad-indices/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/quad-indices/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/quad-indices/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/quad-indices/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/quad-indices/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/quad-indices/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/quad-indices/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/quad-indices/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/quad-indices/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/quad-indices/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/quad-indices/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/quad-indices/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/quad-indices/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/quad-indices/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/quad-indices/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/quad-indices/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/quad-indices/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/quad-indices/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/quad-indices/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/quad-indices/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/quad-indices/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/quad-indices/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/quad-indices/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/quad-indices/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}}],"sources":{"node_modules/quad-indices/index.js":"var dtype = require('dtype')\nvar anArray = require('an-array')\nvar isBuffer = require('is-buffer')\n\nvar CW = [0, 2, 3]\nvar CCW = [2, 1, 3]\n\nmodule.exports = function createQuadElements(array, opt) {\n    //if user didn't specify an output array\n    if (!array || !(anArray(array) || isBuffer(array))) {\n        opt = array || {}\n        array = null\n    }\n\n    if (typeof opt === 'number') //backwards-compatible\n        opt = { count: opt }\n    else\n        opt = opt || {}\n\n    var type = typeof opt.type === 'string' ? opt.type : 'uint16'\n    var count = typeof opt.count === 'number' ? opt.count : 1\n    var start = (opt.start || 0) \n\n    var dir = opt.clockwise !== false ? CW : CCW,\n        a = dir[0], \n        b = dir[1],\n        c = dir[2]\n\n    var numIndices = count * 6\n\n    var indices = array || new (dtype(type))(numIndices)\n    for (var i = 0, j = 0; i < numIndices; i += 6, j += 4) {\n        var x = i + start\n        indices[x + 0] = j + 0\n        indices[x + 1] = j + 1\n        indices[x + 2] = j + 2\n        indices[x + 3] = j + a\n        indices[x + 4] = j + b\n        indices[x + 5] = j + c\n    }\n    return indices\n}"},"lineCount":42}},"error":null,"hash":"5e8a776e969ce27fa90671068ebc03ca","cacheData":{"env":{}}}