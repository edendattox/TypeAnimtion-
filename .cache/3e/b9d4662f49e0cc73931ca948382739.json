{"id":"node_modules/parse-bmfont-ascii/index.js","dependencies":[{"name":"E:\\three.js-stuff\\10 - typeanimation\\package.json","includedInParent":true,"mtime":1622607444721},{"name":"E:\\three.js-stuff\\10 - typeanimation\\node_modules\\parse-bmfont-ascii\\package.json","includedInParent":true,"mtime":1622607384086}],"generated":{"js":"module.exports = function parseBMFontAscii(data) {\n  if (!data)\n    throw new Error('no data provided')\n  data = data.toString().trim()\n\n  var output = {\n    pages: [],\n    chars: [],\n    kernings: []\n  }\n\n  var lines = data.split(/\\r\\n?|\\n/g)\n\n  if (lines.length === 0)\n    throw new Error('no data in BMFont file')\n\n  for (var i = 0; i < lines.length; i++) {\n    var lineData = splitLine(lines[i], i)\n    if (!lineData) //skip empty lines\n      continue\n\n    if (lineData.key === 'page') {\n      if (typeof lineData.data.id !== 'number')\n        throw new Error('malformed file at line ' + i + ' -- needs page id=N')\n      if (typeof lineData.data.file !== 'string')\n        throw new Error('malformed file at line ' + i + ' -- needs page file=\"path\"')\n      output.pages[lineData.data.id] = lineData.data.file\n    } else if (lineData.key === 'chars' || lineData.key === 'kernings') {\n      //... do nothing for these two ...\n    } else if (lineData.key === 'char') {\n      output.chars.push(lineData.data)\n    } else if (lineData.key === 'kerning') {\n      output.kernings.push(lineData.data)\n    } else {\n      output[lineData.key] = lineData.data\n    }\n  }\n\n  return output\n}\n\nfunction splitLine(line, idx) {\n  line = line.replace(/\\t+/g, ' ').trim()\n  if (!line)\n    return null\n\n  var space = line.indexOf(' ')\n  if (space === -1) \n    throw new Error(\"no named row at line \" + idx)\n\n  var key = line.substring(0, space)\n\n  line = line.substring(space + 1)\n  //clear \"letter\" field as it is non-standard and\n  //requires additional complexity to parse \" / = symbols\n  line = line.replace(/letter=[\\'\\\"]\\S+[\\'\\\"]/gi, '')  \n  line = line.split(\"=\")\n  line = line.map(function(str) {\n    return str.trim().match((/(\".*?\"|[^\"\\s]+)+(?=\\s*|\\s*$)/g))\n  })\n\n  var data = []\n  for (var i = 0; i < line.length; i++) {\n    var dt = line[i]\n    if (i === 0) {\n      data.push({\n        key: dt[0],\n        data: \"\"\n      })\n    } else if (i === line.length - 1) {\n      data[data.length - 1].data = parseData(dt[0])\n    } else {\n      data[data.length - 1].data = parseData(dt[0])\n      data.push({\n        key: dt[1],\n        data: \"\"\n      })\n    }\n  }\n\n  var out = {\n    key: key,\n    data: {}\n  }\n\n  data.forEach(function(v) {\n    out.data[v.key] = v.data;\n  })\n\n  return out\n}\n\nfunction parseData(data) {\n  if (!data || data.length === 0)\n    return \"\"\n\n  if (data.indexOf('\"') === 0 || data.indexOf(\"'\") === 0)\n    return data.substring(1, data.length - 1)\n  if (data.indexOf(',') !== -1)\n    return parseIntList(data)\n  return parseInt(data, 10)\n}\n\nfunction parseIntList(data) {\n  return data.split(',').map(function(val) {\n    return parseInt(val, 10)\n  })\n}"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/parse-bmfont-ascii/index.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}}],"sources":{"node_modules/parse-bmfont-ascii/index.js":"module.exports = function parseBMFontAscii(data) {\n  if (!data)\n    throw new Error('no data provided')\n  data = data.toString().trim()\n\n  var output = {\n    pages: [],\n    chars: [],\n    kernings: []\n  }\n\n  var lines = data.split(/\\r\\n?|\\n/g)\n\n  if (lines.length === 0)\n    throw new Error('no data in BMFont file')\n\n  for (var i = 0; i < lines.length; i++) {\n    var lineData = splitLine(lines[i], i)\n    if (!lineData) //skip empty lines\n      continue\n\n    if (lineData.key === 'page') {\n      if (typeof lineData.data.id !== 'number')\n        throw new Error('malformed file at line ' + i + ' -- needs page id=N')\n      if (typeof lineData.data.file !== 'string')\n        throw new Error('malformed file at line ' + i + ' -- needs page file=\"path\"')\n      output.pages[lineData.data.id] = lineData.data.file\n    } else if (lineData.key === 'chars' || lineData.key === 'kernings') {\n      //... do nothing for these two ...\n    } else if (lineData.key === 'char') {\n      output.chars.push(lineData.data)\n    } else if (lineData.key === 'kerning') {\n      output.kernings.push(lineData.data)\n    } else {\n      output[lineData.key] = lineData.data\n    }\n  }\n\n  return output\n}\n\nfunction splitLine(line, idx) {\n  line = line.replace(/\\t+/g, ' ').trim()\n  if (!line)\n    return null\n\n  var space = line.indexOf(' ')\n  if (space === -1) \n    throw new Error(\"no named row at line \" + idx)\n\n  var key = line.substring(0, space)\n\n  line = line.substring(space + 1)\n  //clear \"letter\" field as it is non-standard and\n  //requires additional complexity to parse \" / = symbols\n  line = line.replace(/letter=[\\'\\\"]\\S+[\\'\\\"]/gi, '')  \n  line = line.split(\"=\")\n  line = line.map(function(str) {\n    return str.trim().match((/(\".*?\"|[^\"\\s]+)+(?=\\s*|\\s*$)/g))\n  })\n\n  var data = []\n  for (var i = 0; i < line.length; i++) {\n    var dt = line[i]\n    if (i === 0) {\n      data.push({\n        key: dt[0],\n        data: \"\"\n      })\n    } else if (i === line.length - 1) {\n      data[data.length - 1].data = parseData(dt[0])\n    } else {\n      data[data.length - 1].data = parseData(dt[0])\n      data.push({\n        key: dt[1],\n        data: \"\"\n      })\n    }\n  }\n\n  var out = {\n    key: key,\n    data: {}\n  }\n\n  data.forEach(function(v) {\n    out.data[v.key] = v.data;\n  })\n\n  return out\n}\n\nfunction parseData(data) {\n  if (!data || data.length === 0)\n    return \"\"\n\n  if (data.indexOf('\"') === 0 || data.indexOf(\"'\") === 0)\n    return data.substring(1, data.length - 1)\n  if (data.indexOf(',') !== -1)\n    return parseIntList(data)\n  return parseInt(data, 10)\n}\n\nfunction parseIntList(data) {\n  return data.split(',').map(function(val) {\n    return parseInt(val, 10)\n  })\n}"},"lineCount":108}},"error":null,"hash":"9b421906d52d4bd9bddd095d182f0d49","cacheData":{"env":{}}}