{"id":"node_modules/load-bmfont/browser.js","dependencies":[{"name":"E:\\three.js-stuff\\10 - typeanimation\\package.json","includedInParent":true,"mtime":1622607444721},{"name":"E:\\three.js-stuff\\10 - typeanimation\\node_modules\\load-bmfont\\package.json","includedInParent":true,"mtime":1622607384087},{"name":"xhr","loc":{"line":1,"column":18},"parent":"E:\\three.js-stuff\\10 - typeanimation\\node_modules\\load-bmfont\\browser.js","resolved":"E:\\three.js-stuff\\10 - typeanimation\\node_modules\\xhr\\index.js"},{"name":"parse-bmfont-ascii","loc":{"line":3,"column":25},"parent":"E:\\three.js-stuff\\10 - typeanimation\\node_modules\\load-bmfont\\browser.js","resolved":"E:\\three.js-stuff\\10 - typeanimation\\node_modules\\parse-bmfont-ascii\\index.js"},{"name":"parse-bmfont-xml","loc":{"line":4,"column":23},"parent":"E:\\three.js-stuff\\10 - typeanimation\\node_modules\\load-bmfont\\browser.js","resolved":"E:\\three.js-stuff\\10 - typeanimation\\node_modules\\parse-bmfont-xml\\lib\\browser.js"},{"name":"parse-bmfont-binary","loc":{"line":5,"column":25},"parent":"E:\\three.js-stuff\\10 - typeanimation\\node_modules\\load-bmfont\\browser.js","resolved":"E:\\three.js-stuff\\10 - typeanimation\\node_modules\\parse-bmfont-binary\\index.js"},{"name":"./lib/is-binary","loc":{"line":6,"column":29},"parent":"E:\\three.js-stuff\\10 - typeanimation\\node_modules\\load-bmfont\\browser.js","resolved":"E:\\three.js-stuff\\10 - typeanimation\\node_modules\\load-bmfont\\lib\\is-binary.js"},{"name":"xtend","loc":{"line":7,"column":20},"parent":"E:\\three.js-stuff\\10 - typeanimation\\node_modules\\load-bmfont\\browser.js","resolved":"E:\\three.js-stuff\\10 - typeanimation\\node_modules\\load-bmfont\\node_modules\\xtend\\immutable.js"},{"name":"buffer","parent":"E:\\three.js-stuff\\10 - typeanimation\\node_modules\\load-bmfont\\browser.js","resolved":"C:\\Users\\Rahul\\AppData\\Roaming\\npm\\node_modules\\parcel-bundler\\node_modules\\buffer\\index.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\nvar xhr = require('xhr')\nvar noop = function(){}\nvar parseASCII = require('parse-bmfont-ascii')\nvar parseXML = require('parse-bmfont-xml')\nvar readBinary = require('parse-bmfont-binary')\nvar isBinaryFormat = require('./lib/is-binary')\nvar xtend = require('xtend')\n\nvar xml2 = (function hasXML2() {\n  return self.XMLHttpRequest && \"withCredentials\" in new XMLHttpRequest\n})()\n\nmodule.exports = function(opt, cb) {\n  cb = typeof cb === 'function' ? cb : noop\n\n  if (typeof opt === 'string')\n    opt = { uri: opt }\n  else if (!opt)\n    opt = {}\n\n  var expectBinary = opt.binary\n  if (expectBinary)\n    opt = getBinaryOpts(opt)\n\n  xhr(opt, function(err, res, body) {\n    if (err)\n      return cb(err)\n    if (!/^2/.test(res.statusCode))\n      return cb(new Error('http status code: '+res.statusCode))\n    if (!body)\n      return cb(new Error('no body result'))\n\n    var binary = false \n\n    //if the response type is an array buffer,\n    //we need to convert it into a regular Buffer object\n    if (isArrayBuffer(body)) {\n      var array = new Uint8Array(body)\n      body = Buffer.from(array, 'binary')\n    }\n\n    //now check the string/Buffer response\n    //and see if it has a binary BMF header\n    if (isBinaryFormat(body)) {\n      binary = true\n      //if we have a string, turn it into a Buffer\n      if (typeof body === 'string') \n        body = Buffer.from(body, 'binary')\n    } \n\n    //we are not parsing a binary format, just ASCII/XML/etc\n    if (!binary) {\n      //might still be a buffer if responseType is 'arraybuffer'\n      if (Buffer.isBuffer(body))\n        body = body.toString(opt.encoding)\n      body = body.trim()\n    }\n\n    var result\n    try {\n      var type = res.headers['content-type']\n      if (binary)\n        result = readBinary(body)\n      else if (/json/.test(type) || body.charAt(0) === '{')\n        result = JSON.parse(body)\n      else if (/xml/.test(type)  || body.charAt(0) === '<')\n        result = parseXML(body)\n      else\n        result = parseASCII(body)\n    } catch (e) {\n      cb(new Error('error parsing font '+e.message))\n      cb = noop\n    }\n    cb(null, result)\n  })\n}\n\nfunction isArrayBuffer(arr) {\n  var str = Object.prototype.toString\n  return str.call(arr) === '[object ArrayBuffer]'\n}\n\nfunction getBinaryOpts(opt) {\n  //IE10+ and other modern browsers support array buffers\n  if (xml2)\n    return xtend(opt, { responseType: 'arraybuffer' })\n  \n  if (typeof self.XMLHttpRequest === 'undefined')\n    throw new Error('your browser does not support XHR loading')\n\n  //IE9 and XML1 browsers could still use an override\n  var req = new self.XMLHttpRequest()\n  req.overrideMimeType('text/plain; charset=x-user-defined')\n  return xtend({\n    xhr: req\n  }, opt)\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/load-bmfont/browser.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/load-bmfont/browser.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}}],"sources":{"node_modules/load-bmfont/browser.js":"var xhr = require('xhr')\nvar noop = function(){}\nvar parseASCII = require('parse-bmfont-ascii')\nvar parseXML = require('parse-bmfont-xml')\nvar readBinary = require('parse-bmfont-binary')\nvar isBinaryFormat = require('./lib/is-binary')\nvar xtend = require('xtend')\n\nvar xml2 = (function hasXML2() {\n  return self.XMLHttpRequest && \"withCredentials\" in new XMLHttpRequest\n})()\n\nmodule.exports = function(opt, cb) {\n  cb = typeof cb === 'function' ? cb : noop\n\n  if (typeof opt === 'string')\n    opt = { uri: opt }\n  else if (!opt)\n    opt = {}\n\n  var expectBinary = opt.binary\n  if (expectBinary)\n    opt = getBinaryOpts(opt)\n\n  xhr(opt, function(err, res, body) {\n    if (err)\n      return cb(err)\n    if (!/^2/.test(res.statusCode))\n      return cb(new Error('http status code: '+res.statusCode))\n    if (!body)\n      return cb(new Error('no body result'))\n\n    var binary = false \n\n    //if the response type is an array buffer,\n    //we need to convert it into a regular Buffer object\n    if (isArrayBuffer(body)) {\n      var array = new Uint8Array(body)\n      body = Buffer.from(array, 'binary')\n    }\n\n    //now check the string/Buffer response\n    //and see if it has a binary BMF header\n    if (isBinaryFormat(body)) {\n      binary = true\n      //if we have a string, turn it into a Buffer\n      if (typeof body === 'string') \n        body = Buffer.from(body, 'binary')\n    } \n\n    //we are not parsing a binary format, just ASCII/XML/etc\n    if (!binary) {\n      //might still be a buffer if responseType is 'arraybuffer'\n      if (Buffer.isBuffer(body))\n        body = body.toString(opt.encoding)\n      body = body.trim()\n    }\n\n    var result\n    try {\n      var type = res.headers['content-type']\n      if (binary)\n        result = readBinary(body)\n      else if (/json/.test(type) || body.charAt(0) === '{')\n        result = JSON.parse(body)\n      else if (/xml/.test(type)  || body.charAt(0) === '<')\n        result = parseXML(body)\n      else\n        result = parseASCII(body)\n    } catch (e) {\n      cb(new Error('error parsing font '+e.message))\n      cb = noop\n    }\n    cb(null, result)\n  })\n}\n\nfunction isArrayBuffer(arr) {\n  var str = Object.prototype.toString\n  return str.call(arr) === '[object ArrayBuffer]'\n}\n\nfunction getBinaryOpts(opt) {\n  //IE10+ and other modern browsers support array buffers\n  if (xml2)\n    return xtend(opt, { responseType: 'arraybuffer' })\n  \n  if (typeof self.XMLHttpRequest === 'undefined')\n    throw new Error('your browser does not support XHR loading')\n\n  //IE9 and XML1 browsers could still use an override\n  var req = new self.XMLHttpRequest()\n  req.overrideMimeType('text/plain; charset=x-user-defined')\n  return xtend({\n    xhr: req\n  }, opt)\n}\n"},"lineCount":99}},"error":null,"hash":"af27809487d4383292156f60c4f87ee2","cacheData":{"env":{}}}