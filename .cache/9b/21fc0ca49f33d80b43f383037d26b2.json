{"id":"node_modules/parse-bmfont-xml/lib/browser.js","dependencies":[{"name":"E:\\three.js-stuff\\10 - typeanimation\\package.json","includedInParent":true,"mtime":1622607444721},{"name":"E:\\three.js-stuff\\10 - typeanimation\\node_modules\\parse-bmfont-xml\\package.json","includedInParent":true,"mtime":1622607384086},{"name":"./parse-attribs","loc":{"line":1,"column":30},"parent":"E:\\three.js-stuff\\10 - typeanimation\\node_modules\\parse-bmfont-xml\\lib\\browser.js","resolved":"E:\\three.js-stuff\\10 - typeanimation\\node_modules\\parse-bmfont-xml\\lib\\parse-attribs.js"},{"name":"xml-parse-from-string","loc":{"line":2,"column":30},"parent":"E:\\three.js-stuff\\10 - typeanimation\\node_modules\\parse-bmfont-xml\\lib\\browser.js","resolved":"E:\\three.js-stuff\\10 - typeanimation\\node_modules\\xml-parse-from-string\\index.js"}],"generated":{"js":"var parseAttributes = require('./parse-attribs')\nvar parseFromString = require('xml-parse-from-string')\n\n//In some cases element.attribute.nodeName can return\n//all lowercase values.. so we need to map them to the correct \n//case\nvar NAME_MAP = {\n  scaleh: 'scaleH',\n  scalew: 'scaleW',\n  stretchh: 'stretchH',\n  lineheight: 'lineHeight',\n  alphachnl: 'alphaChnl',\n  redchnl: 'redChnl',\n  greenchnl: 'greenChnl',\n  bluechnl: 'blueChnl'\n}\n\nmodule.exports = function parse(data) {\n  data = data.toString()\n  \n  var xmlRoot = parseFromString(data)\n  var output = {\n    pages: [],\n    chars: [],\n    kernings: []\n  }\n\n  //get config settings\n  ;['info', 'common'].forEach(function(key) {\n    var element = xmlRoot.getElementsByTagName(key)[0]\n    if (element)\n      output[key] = parseAttributes(getAttribs(element))\n  })\n\n  //get page info\n  var pageRoot = xmlRoot.getElementsByTagName('pages')[0]\n  if (!pageRoot)\n    throw new Error('malformed file -- no <pages> element')\n  var pages = pageRoot.getElementsByTagName('page')\n  for (var i=0; i<pages.length; i++) {\n    var p = pages[i]\n    var id = parseInt(p.getAttribute('id'), 10)\n    var file = p.getAttribute('file')\n    if (isNaN(id))\n      throw new Error('malformed file -- page \"id\" attribute is NaN')\n    if (!file)\n      throw new Error('malformed file -- needs page \"file\" attribute')\n    output.pages[parseInt(id, 10)] = file\n  }\n\n  //get kernings / chars\n  ;['chars', 'kernings'].forEach(function(key) {\n    var element = xmlRoot.getElementsByTagName(key)[0]\n    if (!element)\n      return\n    var childTag = key.substring(0, key.length-1)\n    var children = element.getElementsByTagName(childTag)\n    for (var i=0; i<children.length; i++) {      \n      var child = children[i]\n      output[key].push(parseAttributes(getAttribs(child)))\n    }\n  })\n  return output\n}\n\nfunction getAttribs(element) {\n  var attribs = getAttribList(element)\n  return attribs.reduce(function(dict, attrib) {\n    var key = mapName(attrib.nodeName)\n    dict[key] = attrib.nodeValue\n    return dict\n  }, {})\n}\n\nfunction getAttribList(element) {\n  //IE8+ and modern browsers\n  var attribs = []\n  for (var i=0; i<element.attributes.length; i++)\n    attribs.push(element.attributes[i])\n  return attribs\n}\n\nfunction mapName(nodeName) {\n  return NAME_MAP[nodeName.toLowerCase()] || nodeName\n}"},"sourceMaps":{"js":{"mappings":[{"source":"node_modules/parse-bmfont-xml/lib/browser.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/parse-bmfont-xml/lib/browser.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/parse-bmfont-xml/lib/browser.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/parse-bmfont-xml/lib/browser.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/parse-bmfont-xml/lib/browser.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/parse-bmfont-xml/lib/browser.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/parse-bmfont-xml/lib/browser.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/parse-bmfont-xml/lib/browser.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/parse-bmfont-xml/lib/browser.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/parse-bmfont-xml/lib/browser.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/parse-bmfont-xml/lib/browser.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/parse-bmfont-xml/lib/browser.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/parse-bmfont-xml/lib/browser.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/parse-bmfont-xml/lib/browser.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/parse-bmfont-xml/lib/browser.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/parse-bmfont-xml/lib/browser.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/parse-bmfont-xml/lib/browser.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/parse-bmfont-xml/lib/browser.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/parse-bmfont-xml/lib/browser.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/parse-bmfont-xml/lib/browser.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/parse-bmfont-xml/lib/browser.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/parse-bmfont-xml/lib/browser.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/parse-bmfont-xml/lib/browser.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/parse-bmfont-xml/lib/browser.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/parse-bmfont-xml/lib/browser.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/parse-bmfont-xml/lib/browser.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/parse-bmfont-xml/lib/browser.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/parse-bmfont-xml/lib/browser.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/parse-bmfont-xml/lib/browser.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/parse-bmfont-xml/lib/browser.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/parse-bmfont-xml/lib/browser.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/parse-bmfont-xml/lib/browser.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/parse-bmfont-xml/lib/browser.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/parse-bmfont-xml/lib/browser.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/parse-bmfont-xml/lib/browser.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/parse-bmfont-xml/lib/browser.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/parse-bmfont-xml/lib/browser.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/parse-bmfont-xml/lib/browser.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/parse-bmfont-xml/lib/browser.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/parse-bmfont-xml/lib/browser.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/parse-bmfont-xml/lib/browser.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/parse-bmfont-xml/lib/browser.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/parse-bmfont-xml/lib/browser.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/parse-bmfont-xml/lib/browser.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/parse-bmfont-xml/lib/browser.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/parse-bmfont-xml/lib/browser.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/parse-bmfont-xml/lib/browser.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/parse-bmfont-xml/lib/browser.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/parse-bmfont-xml/lib/browser.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/parse-bmfont-xml/lib/browser.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/parse-bmfont-xml/lib/browser.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/parse-bmfont-xml/lib/browser.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/parse-bmfont-xml/lib/browser.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/parse-bmfont-xml/lib/browser.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/parse-bmfont-xml/lib/browser.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/parse-bmfont-xml/lib/browser.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/parse-bmfont-xml/lib/browser.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/parse-bmfont-xml/lib/browser.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/parse-bmfont-xml/lib/browser.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/parse-bmfont-xml/lib/browser.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/parse-bmfont-xml/lib/browser.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/parse-bmfont-xml/lib/browser.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/parse-bmfont-xml/lib/browser.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/parse-bmfont-xml/lib/browser.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/parse-bmfont-xml/lib/browser.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/parse-bmfont-xml/lib/browser.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/parse-bmfont-xml/lib/browser.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/parse-bmfont-xml/lib/browser.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/parse-bmfont-xml/lib/browser.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/parse-bmfont-xml/lib/browser.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/parse-bmfont-xml/lib/browser.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/parse-bmfont-xml/lib/browser.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/parse-bmfont-xml/lib/browser.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/parse-bmfont-xml/lib/browser.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/parse-bmfont-xml/lib/browser.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/parse-bmfont-xml/lib/browser.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/parse-bmfont-xml/lib/browser.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/parse-bmfont-xml/lib/browser.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/parse-bmfont-xml/lib/browser.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/parse-bmfont-xml/lib/browser.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/parse-bmfont-xml/lib/browser.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/parse-bmfont-xml/lib/browser.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/parse-bmfont-xml/lib/browser.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/parse-bmfont-xml/lib/browser.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/parse-bmfont-xml/lib/browser.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}}],"sources":{"node_modules/parse-bmfont-xml/lib/browser.js":"var parseAttributes = require('./parse-attribs')\nvar parseFromString = require('xml-parse-from-string')\n\n//In some cases element.attribute.nodeName can return\n//all lowercase values.. so we need to map them to the correct \n//case\nvar NAME_MAP = {\n  scaleh: 'scaleH',\n  scalew: 'scaleW',\n  stretchh: 'stretchH',\n  lineheight: 'lineHeight',\n  alphachnl: 'alphaChnl',\n  redchnl: 'redChnl',\n  greenchnl: 'greenChnl',\n  bluechnl: 'blueChnl'\n}\n\nmodule.exports = function parse(data) {\n  data = data.toString()\n  \n  var xmlRoot = parseFromString(data)\n  var output = {\n    pages: [],\n    chars: [],\n    kernings: []\n  }\n\n  //get config settings\n  ;['info', 'common'].forEach(function(key) {\n    var element = xmlRoot.getElementsByTagName(key)[0]\n    if (element)\n      output[key] = parseAttributes(getAttribs(element))\n  })\n\n  //get page info\n  var pageRoot = xmlRoot.getElementsByTagName('pages')[0]\n  if (!pageRoot)\n    throw new Error('malformed file -- no <pages> element')\n  var pages = pageRoot.getElementsByTagName('page')\n  for (var i=0; i<pages.length; i++) {\n    var p = pages[i]\n    var id = parseInt(p.getAttribute('id'), 10)\n    var file = p.getAttribute('file')\n    if (isNaN(id))\n      throw new Error('malformed file -- page \"id\" attribute is NaN')\n    if (!file)\n      throw new Error('malformed file -- needs page \"file\" attribute')\n    output.pages[parseInt(id, 10)] = file\n  }\n\n  //get kernings / chars\n  ;['chars', 'kernings'].forEach(function(key) {\n    var element = xmlRoot.getElementsByTagName(key)[0]\n    if (!element)\n      return\n    var childTag = key.substring(0, key.length-1)\n    var children = element.getElementsByTagName(childTag)\n    for (var i=0; i<children.length; i++) {      \n      var child = children[i]\n      output[key].push(parseAttributes(getAttribs(child)))\n    }\n  })\n  return output\n}\n\nfunction getAttribs(element) {\n  var attribs = getAttribList(element)\n  return attribs.reduce(function(dict, attrib) {\n    var key = mapName(attrib.nodeName)\n    dict[key] = attrib.nodeValue\n    return dict\n  }, {})\n}\n\nfunction getAttribList(element) {\n  //IE8+ and modern browsers\n  var attribs = []\n  for (var i=0; i<element.attributes.length; i++)\n    attribs.push(element.attributes[i])\n  return attribs\n}\n\nfunction mapName(nodeName) {\n  return NAME_MAP[nodeName.toLowerCase()] || nodeName\n}"},"lineCount":85}},"error":null,"hash":"7be1c686bdaa718c74e8e7b09d738100","cacheData":{"env":{}}}